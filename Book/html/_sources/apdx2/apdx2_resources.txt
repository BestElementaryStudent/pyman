.. highlight:: python   :linenothreshold: 5.. _apdx2:****************Python Resources****************This text provides an introduction to Python for science and engineering applications but is hardly exhaustive.  There are many other resources that you will want to tap.  Here I point out several that you may find useful.Web resources=============The best web resource for Python is a good search engine like Google.  Nevertheless, I list a few web sites here that you might find useful.  I have successfully resisted any attempt to be exhaustive so that the list is actually useful.  Nevertheless, if you find a really cool site that you think should be on this list, please let me know.    http://www.python.org/        The official Python web site.  I almost never look here.        http://docs.python.org/2/reference/        Sometimes I look here for detailed information about Python 2, which is the version used in this manual.  Someday, when all the most useful packages are available for Python 3, we will switch to Python 3 and use http://docs.python.org/3/reference/ instead.            http://docs.scipy.org/doc/numpy/reference/        I usually start here when I need information about NumPy.  It has links to just about all the NumPy documentation I need.  By the way, I say "num-pee", which rhymes with "bumpy"---everybody else says "num-pie", which doesn't sound like English to me.        http://docs.scipy.org/doc/scipy/reference/        I start here when I need information about SciPy, its various packages and their functions.  I say "psy-pi" for SciPy, like everyone else.  Who says I have to be consistent (see Emerson)?        http://matplotlib.org/api/pyplot_summary.html        The *Plotting Commands Summary* page for MatPlotLib.  It has a search feature and links to all the MatPlotLib documentation, which I use a lot.  You can go the the main MatPlotLib page, http://matplotlib.org/, but frankly, it's less useful.  The site http://www.loria.fr/~rougier/teaching/matplotlib/ is also useful for learning some MatPlotLib tricks.        http://ipython.org/        I rarely go to this page but it's there if you need information about the IPython interpreter, especially if you want to find out more about IPython magic commands.        http://www.enthought.com/        I get my latest version of Python and all the packages I need for scientific computing here.  One stop shopping and everything is free for academic users.  They offer the full Enthought Python Distribution (EPD) or EPD Free, a lighter weight version that includes Python and all the packages you are likely to need for nearly all of your scientific computing needs.  I use the full EPD package but if you're a student or new to Python, EPD Free is the place to start.        http://www.scipy.org/Mailing_Lists        Go here if you want to sign up for a mailing list for NumPy or SciPy, or if you want to report a bug.  Mailing lists give you access to a community of developers and users that can often provide expert help.  Just remember to be polite and respectful of those helping you and also to those posting questions.        https://lists.sourceforge.net/lists/listinfo/matplotlib-users        The mailing list for MatPlotLib.  See paragraph immediately above.Books=====There are a lot of books on Python and there is no way I can provide reviews for all of them.  I have found that the book by Mark Lutz, *Learning Python*, published by O'Reilly Media does the trick for most people.  It doesn't have anything special for scientific programming, and thus does not cover the NumPy, SciPy, or MatPlotLib packages, but for just about everything else, it's an excellent resource.  It gives a good introduction to object oriented programming, or OOP, which I say little about in this text.  The 3rd edition of the book covers Python 2 while the 4th (and current) edition, with the subtitle "Powerful Object-Oriented Programming", covers Python 3.  You are probably better off getting the 4th edition as everybody will soon be using Python 3.  If you are using Python 2, as we do in this text, you can easily enough figure out the differences between Python 3 and 2.  So I recommend the 4th Edition.